Vagrant.configure("2") do |config|

    ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

    boxes = [
        { :name => "Ubuntu-Server", :ip => "192.168.56.10", :box => "Vagrant_Project_M2I/Linux", :memory => "4096", :cpus => 2, :usb => "off", :os => "linux", :forwarded_port => { :guest => 21, :host => 2121 } },
        { :name => "Kali", :ip => "192.168.56.11", :box => "kalilinux/rolling", :memory => "4096", :cpus => 2, :usb => "off", :os => "linux" },
        { :name => "Windows-Server", :ip => "192.168.56.12", :box => "peru/windows-server-2016-standard-x64-eval", :memory => "6024", :cpus => 4, :usb => "off", :os => "windows" },
        { :name => "Windows-10", :ip => "192.168.56.13", :box => "gusztavvargadr/windows-10", :memory => "6024", :cpus => 4, :usb => "off", :os => "windows" }
    ]

    boxes.each do |box|
        config.vm.define box[:name] do |machine|
            machine.vm.box = box[:box]
            machine.vm.network "private_network", ip: box[:ip]
        config.vm.provider "virtualbox" do |v|
            v.memory = box[:memory]
            v.cpus = box[:cpus]
            v.customize ["modifyvm", :id, "--usb", box[:usb]]
        end

            if box[:forwarded_port]
                machine.vm.network "forwarded_port", guest: box[:forwarded_port][:guest], host: box[:forwarded_port][:host]
            end
        end
    end

    config.vm.define "Ubuntu-Server" do |ubuntu|
        ubuntu.vm.provision "shell", inline: <<-SHELL
            apt-get update
            apt-get upgrade -y
            apt-get install -y apache2 mariadb-server php libapache2-mod-php php-mysql
            apt-get install -y php-mbstring php-curl php-gd php-simplexml php-intl php-ldap php-xmlrpc php-zip php-bz2 php-apcu
            # Configuration de la base de donées GLPI
            mysql -u root -e "CREATE DATABASE glpi;"
            mysql -u root -e "CREATE USER 'glpi'@'localhost' IDENTIFIED BY 'password';"
            mysql -u root -e "GRANT ALL PRIVILEGES ON glpi.* TO 'glpi'@'localhost';"
            mysql -u root -e "FLUSH PRIVILEGES;"
            # Télécharement de GLPI
            wget https://github.com/glpi-project/glpi/releases/download/9.5.5/glpi-9.5.5.tgz
            tar -xvzf glpi-9.5.5.tgz -C /var/www/html/
            chown -R www-data:www-data /var/www/html/glpi
            chmod -R 755 /var/www/html/glpi
            # Configuration d'apache
            echo "<VirtualHost *:80>
                DocumentRoot /var/www/html/glpi
                <Directory /var/www/html/glpi>
                    AllowOverride All
                    Require all granted
                </Directory>
            </VirtualHost>" > /etc/apache2/sites-available/glpi.conf
            a2ensite glpi.conf
            a2dissite 000-default.conf
            service apache2 restart
            #Activation de GLPI
            phpenmod mbstring
            phpenmod curl
            phpenmod gd
            phpenmod simplexml
            phpenmod intl
            phpenmod ldap
            phpenmod xmlrpc
            phpenmod zip
            phpenmod bz2
            phpenmod apcu
            phpenmod cas
            # Installation de proftpd
            wget ftp://ftp.proftpd.org/distrib/source/proftpd-1.3.5.tar.gz
            tar xfz proftpd-1.3.5.tar.gz
            cd proftpd-1.3.5
            sudo ./configure --with-modules=mod_copy
            make && sudo make install
            sudo /usr/local/sbin/proftpd
            # Ajout du flag
            echo "NHM2I{glpi}" > /home/vagrant/.notes
        SHELL
    end

    config.vm.define "Windows-Server" do |winsrv|
        winsrv.vm.provision "shell", inline: <<-SHELL
            Set-WinUserLanguageList -LanguageList fr-FR -Force
            New-Item -ItemType Directory -Path "C:\\Shared_Folder"
            New-SmbShare -Name "Shared_Folder" -Path "C:\\Shared_Folder" -FullAccess "Everyone"
        SHELL
        winsrv.vm.provision "ansible" do |ansible|
            ansible.playbook = "playbook_server.yml"
            ansible.compatibility_mode = "2.0"
        end
    end

    config.vm.define "Windows-10" do |win10|
        win10.vm.provision "ansible" do |ansible|
            ansible.playbook = "playbook_client.yml"
            ansible.compatibility_mode = "2.0"
        end
    end
end
